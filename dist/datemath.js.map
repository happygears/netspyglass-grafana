{"version":3,"sources":["../src/datemath.js"],"names":[],"mappings":"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","file":"datemath.js","sourcesContent":["/*\n * Copyright (c) 2016.  Happy Gears, Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport _ from 'lodash';\nimport moment from 'moment';\n\nvar units = ['y', 'M', 'w', 'd', 'h', 'm', 's'];\n\nexport function parse(text, roundUp) {\n    if (!text) { return undefined; }\n    if (moment.isMoment(text)) { return text; }\n    if (_.isDate(text)) { return moment(text); }\n\n    var time;\n    var mathString = '';\n    var index;\n    var parseString;\n\n    if (text.substring(0, 3) === 'now') {\n        time = moment();\n        mathString = text.substring('now'.length);\n    } else {\n        index = text.indexOf('||');\n        if (index === -1) {\n            parseString = text;\n            mathString = ''; // nothing else\n        } else {\n            parseString = text.substring(0, index);\n            mathString = text.substring(index + 2);\n        }\n        // We're going to just require ISO8601 timestamps, k?\n        time = moment(parseString, moment.ISO_8601);\n    }\n\n    if (!mathString.length) {\n        return time;\n    }\n\n    return parseDateMath(mathString, time, roundUp);\n}\n\nexport function isValid(text) {\n    var date = parse(text);\n    if (!date) {\n        return false;\n    }\n\n    if (moment.isMoment(date)) {\n        return date.isValid();\n    }\n\n    return false;\n}\n\nexport function parseDateMath(mathString, time, roundUp) {\n    var dateTime = time;\n    var i = 0;\n    var len = mathString.length;\n\n    while (i < len) {\n        var c = mathString.charAt(i++);\n        var type;\n        var num;\n        var unit;\n\n        if (c === '/') {\n            type = 0;\n        } else if (c === '+') {\n            type = 1;\n        } else if (c === '-') {\n            type = 2;\n        } else {\n            return undefined;\n        }\n\n        if (isNaN(mathString.charAt(i))) {\n            num = 1;\n        } else if (mathString.length === 2) {\n            num = mathString.charAt(i);\n        } else {\n            var numFrom = i;\n            while (!isNaN(mathString.charAt(i))) {\n                i++;\n                if (i > 10) { return undefined; }\n            }\n            num = parseInt(mathString.substring(numFrom, i), 10);\n        }\n\n        if (type === 0) {\n            // rounding is only allowed on whole, single, units (eg M or 1M, not 0.5M or 2M)\n            if (num !== 1) {\n                return undefined;\n            }\n        }\n        unit = mathString.charAt(i++);\n\n        if (!_.contains(units, unit)) {\n            return undefined;\n        } else {\n            if (type === 0) {\n                if (roundUp) {\n                    dateTime.endOf(unit);\n                } else {\n                    dateTime.startOf(unit);\n                }\n            } else if (type === 1) {\n                dateTime.add(num, unit);\n            } else if (type === 2) {\n                dateTime.subtract(num, unit);\n            }\n        }\n    }\n    return dateTime;\n}\n\n"]}