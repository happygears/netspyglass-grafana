{"version":3,"sources":["../src/module.js"],"names":["NetSpyGlassDatasource","NetSpyGlassDatasourceQueryCtrl","angular","GenericConfigCtrl","templateUrl","GenericQueryOptionsCtrl","GenericAnnotationsQueryCtrl","module","directive","$compile","template","restrict","scope","items","value","eventOnSelect","link","$scope","$element","$attrs","$watch","val","console","log","buildDropdownHtml","selectItem","list","html","forEach","l1","type","name","Object","keys","key","index","length","item","compiledHtml","append"],"mappings":";;;;;;;;;;;;;;;AAgBQA,iC,eAAAA,qB;;AACAC,0C,eAAAA,8B;;AAYDC,mB;;;kCAVDC,iB;;;;AACNA,8BAAkBC,WAAlB,GAAgC,sBAAhC;;wCAEMC,uB;;;;AACNA,oCAAwBD,WAAxB,GAAsC,6BAAtC;;4CAEME,2B;;;;AACNA,wCAA4BF,WAA5B,GAA0C,kCAA1C;;AAKAF,oBAAQK,MAAR,CAAe,oBAAf,EACKC,SADL,CACe,gBADf,EACgC,CAAC,UAAD,EAAa,UAASC,QAAT,EAAmB;AACxD,uBAAO;AACHC,8BAAU,EADP;AAEHC,8BAAU,GAFP;AAGHC,2BAAO;AACHC,+BAAO,GADJ;AAEHC,+BAAO,GAFJ;AAGHC,uCAAe;AAHZ,qBAHJ;AAQHC,0BAAM,cAASC,MAAT,EAAiBC,QAAjB,EAA2BC,MAA3B,EAAmC;AACrC;;AAEAF,+BAAOG,MAAP,CAAc,OAAd,EAAuB,UAACC,GAAD,EAAS;AAC5BC,oCAAQC,GAAR,CAAYF,GAAZ;AACAG,8CAAkBH,GAAlB;AACH,yBAHD;;AAKAJ,+BAAOQ,UAAP,GAAoB,UAASX,KAAT,EAAgB;AAChCG,mCAAOH,KAAP,GAAeA,KAAf;AACAG,mCAAOF,aAAP,CAAqB,EAACD,OAAOA,KAAR,EAArB;AACH,yBAHD;;AAKA,iCAASU,iBAAT,CAA2BE,IAA3B,EAAiC;AAC7B,gCAAIC,OAAO,EAAX;;AAEAD,iCAAKE,OAAL,CAAa,UAACC,EAAD,EAAQ;AACjB,oCAAIA,GAAGC,IAAH,IAAW,WAAf,EAA4B;AACxBH;AACA;AACH;AACD,oCAAIE,GAAGC,IAAH,IAAW,QAAf,EAAyB;AACrBH,oFAA6CE,GAAGE,IAAhD,aAA2DF,GAAGE,IAA9D;AACA;AACH;;AAEDC,uCAAOC,IAAP,CAAYJ,EAAZ,EAAgBD,OAAhB,CAAwB,UAACM,GAAD,EAAMC,KAAN,EAAgB;AACpC,wCAAIrB,QAAQe,GAAGK,GAAH,CAAZ;;AAEA,wCAAIpB,MAAMsB,MAAV,EAAmB;AACfT;AACAA,wDAAcO,GAAd;AACAP;AACAb,8CAAMc,OAAN,CAAc,UAACS,IAAD,EAAU;AACpBV,4FAA6CU,KAAKN,IAAlD,aAA6DM,KAAKN,IAAlE;AACH,yCAFD;AAGAJ;AACAA;AACH,qCATD,MASO;AACHA;AACAA,wDAAcO,GAAd;AACAP;AACH;AACJ,iCAjBD;AAmBH,6BA7BD;;AA+BA,gCAAIW,eAAe7B,SAASkB,IAAT,EAAeV,MAAf,CAAnB;;AAEAC,qCAASS,IAAT,CAAc,EAAd;AACAL,oCAAQC,GAAR,CAAYe,YAAZ;AACApB,qCAASqB,MAAT,CAAgBD,YAAhB;AACH;AAEJ;AA9DE,iBAAP;AAgEH,aAjE2B,CADhC;;kCAqEItC,qB;;iCACAC,8B;;kCACAE,iB;;wCACAE,uB;;4CACAC,2B","file":"module.js","sourcesContent":["/*\n * Copyright (c) 2016.  Happy Gears, Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NetSpyGlassDatasource} from './datasource';\nimport {NetSpyGlassDatasourceQueryCtrl} from './query_ctrl';\n\nclass GenericConfigCtrl {}\nGenericConfigCtrl.templateUrl = 'partials/config.html';\n\nclass GenericQueryOptionsCtrl {}\nGenericQueryOptionsCtrl.templateUrl = 'partials/query.options.html';\n\nclass GenericAnnotationsQueryCtrl {}\nGenericAnnotationsQueryCtrl.templateUrl = 'partials/annotations.editor.html';\n\n\nimport angular from 'angular';\n\nangular.module('grafana.directives')\n    .directive(\"selectDropdown\",['$compile', function($compile) {\n        return {\n            template: '',\n            restrict: 'A',\n            scope: {\n                items: '=',\n                value: '=',\n                eventOnSelect: '&'\n            },\n            link: function($scope, $element, $attrs) {\n                \"use strict\";\n\n                $scope.$watch('items', (val) => {\n                    console.log(val);\n                    buildDropdownHtml(val);\n                });\n\n                $scope.selectItem = function(value) {\n                    $scope.value = value;\n                    $scope.eventOnSelect({value: value});\n                };\n\n                function buildDropdownHtml(list) {\n                    let html = '';\n\n                    list.forEach((l1) => {\n                        if( l1.type == 'separator') {\n                            html += `<li class=\"separator\"><span>-</span></li>`;\n                            return;\n                        }\n                        if( l1.type == 'simple') {\n                            html += `<li><a data-ng-click=\"selectItem('${l1.name}')\">${l1.name}</a></li>`;\n                            return;\n                        }\n\n                        Object.keys(l1).forEach((key, index) => {\n                            let value = l1[key];\n\n                            if( value.length ) {\n                                html += `<li class=\"dropdown-submenu\" role=\"menu\">`;\n                                html += `<a>${key}</a>`;\n                                html += `<ul class=\"dropdown-menu\" role=\"menu\">`;\n                                value.forEach((item) => {\n                                    html += `<li><a data-ng-click=\"selectItem('${item.name}')\">${item.name}</a></li>`;\n                                });\n                                html += `</ul>`;\n                                html += `</li>`;\n                            } else {\n                                html += `<li>`;\n                                html += `<a>${key}</a>`;\n                                html += `</li>`;\n                            }\n                        });\n\n                    });\n\n                    let compiledHtml = $compile(html)($scope);\n\n                    $element.html('');\n                    console.log(compiledHtml);\n                    $element.append(compiledHtml);\n                }\n\n            }\n        };\n    }]);\n\nexport {\n    NetSpyGlassDatasource as Datasource,\n    NetSpyGlassDatasourceQueryCtrl as QueryCtrl,\n    GenericConfigCtrl as ConfigCtrl,\n    GenericQueryOptionsCtrl as QueryOptionsCtrl,\n    GenericAnnotationsQueryCtrl as AnnotationsQueryCtrl\n};\n"]}