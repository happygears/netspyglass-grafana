{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","prompts","category","variable","device","component","groupByType","groupBy","orderBy","selectItem","whereValue","targetDefaults","columns","rawQuery","limit","NetSpyGlassQueryCtrl","$scope","$injector","uiSegmentSrv","arguments","options","categories","segments","newPlusButton","removeSegment","newSegment","fake","value","panelCtrl","refresh","initTarget","datasource","getCategories","then","_","defaultsDeep","target","execute","segment","index","$q","get","promise","resolve","type","getFacets","facets","concat","getSuggestions","tags","when","newOperators","rebuildTargetTagConditions","list","map","item","segmentSrv","splice","length","push","Math","max","newCondition","newOperator","newFake","cssClass","tagIndex","tagOperator","forEach","key","operator","condition","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["/*\n * Copyright (c) 2017.  Happy Gears, Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\n\n/**\n * @typedef {{ type: string, cssClass: string }} ISegment\n */\n\n\nconst prompts = {\n    category: 'select category',\n    variable: 'select variable',\n    device: 'select device',\n    component: 'select component',\n    groupByType: 'select type',\n    groupBy: 'select value',\n    orderBy: 'select value',\n    selectItem: 'select item',\n    whereValue: 'select value',\n};\n\nconst targetDefaults = {\n    columns: [],\n    category: prompts.category,\n    variable: prompts.variable,\n    rawQuery: 0,\n    limit: 100\n};\n\n\nexport class NetSpyGlassQueryCtrl extends QueryCtrl {\n\n    /**\n     * @var {NetSpyGlassDatasource} datasource\n     * @property refresh\n     * @property panelCtrl\n     */\n\n\n    constructor($scope, $injector, uiSegmentSrv) {\n        super(...arguments);\n        this.$scope = $scope;\n        this.$injector = $injector;\n        this.prompts = prompts;\n        this.uiSegmentSrv = uiSegmentSrv;\n\n        this.options = {\n            categories: [],\n\n            segments: [\n                uiSegmentSrv.newPlusButton()\n            ],\n\n            removeSegment: uiSegmentSrv.newSegment({fake: true, value: '-- remove tag filter --'})\n        };\n    }\n\n    execute() {\n        this.panelCtrl.refresh();\n    }\n\n    init() {\n        this.initTarget();\n        this.datasource\n            .getCategories()\n            .then((categories) => {\n                this.options.categories = categories;\n            });\n    }\n\n    initTarget() {\n        _.defaultsDeep(this.target, targetDefaults);\n    }\n\n    /**\n     * @param {string} category\n     * @param {string} variable\n     */\n    selectCategory(category, variable) {\n        this.target.category = category;\n        this.target.variable = variable;\n        this.execute();\n    }\n\n    toggleEditorMode() {\n        this.target.rawQuery ^= 1;\n    }\n\n    /**\n     * @param {ISegment} segment\n     * @param {number} index\n     * @returns {Promise}\n     */\n    getTagsOrValues(segment, index) {\n        const $q = this.$injector.get('$q');\n        const uiSegmentSrv = this.uiSegmentSrv;\n        const segments = this.options.segments;\n\n        let promise = $q.resolve([]);\n\n        if (this.target.variable) {\n            switch (segment.type) {\n                case 'key':\n                case 'plus-button':\n                    promise = this.datasource\n                        .getFacets(this.target.variable)\n                        .then((facets) => ['component', 'device'].concat(facets));\n                    break;\n\n                case 'value':\n                    promise = this.datasource.getSuggestions({\n                        type: segments[index - 2].value,\n                        variable: this.target.variable,\n                        tags: this.target.tags\n                    });\n                    break;\n\n                case 'condition':\n                    return this.$q.when([\n                        this.uiSegmentSrv.newSegment('AND'),\n                        this.uiSegmentSrv.newSegment('OR')\n                    ]);\n                    break;\n\n                case 'operator':\n                    return this.$q.when(this.uiSegmentSrv.newOperators([\n                        '=', '!=', '<>', '<', '>', 'REGEXP', 'NOT REGEXP'\n                    ]));\n                    break;\n            }\n        }\n\n        this.rebuildTargetTagConditions();\n\n        return promise.then((list) => list.map((item) => uiSegmentSrv.newSegment({value: item})));\n    }\n\n    /**\n     * @param {ISegment} segment\n     * @param {number} index\n     */\n    tagSegmentUpdated(segment, index) {\n        const segmentSrv = this.uiSegmentSrv;\n        const segments = this.options.segments;\n\n        segments[index] = segment;\n\n        // handle remove tag condition\n\n        if (segment.value === this.options.removeSegment.value) {\n            segments.splice(index, 3);\n            if (segments.length === 0) {\n                segments.push(segmentSrv.newPlusButton());\n            } else if (segments.length > 2) {\n                segments.splice(Math.max(index - 1, 0), 1);\n                if (segments[segments.length - 1].type !== 'plus-button') {\n                    segments.push(segmentSrv.newPlusButton());\n                }\n            }\n        } else {\n            if (segment.type === 'plus-button') {\n                if (index > 2) {\n                    segments.splice(index, 0, segmentSrv.newCondition('AND'));\n                }\n\n                segments.push(segmentSrv.newOperator('='));\n                segments.push(segmentSrv.newFake(this.prompts.whereValue, 'value', 'query-segment-value'));\n                segment.type = 'key';\n                segment.cssClass = 'query-segment-key';\n            }\n\n            if ((index + 1) === segments.length) {\n                segments.push(segmentSrv.newPlusButton());\n            }\n        }\n    }\n\n    rebuildTargetTagConditions() {\n        const segments = this.options.segments;\n        const tags = [];\n        let tagIndex = 0;\n        let tagOperator = '';\n\n        segments.forEach((segment, index) => {\n            if (segment.type === 'key') {\n                if (tags.length === 0) {\n                    tags.push({});\n                }\n                tags[tagIndex].key = segment.value;\n            } else if (segment.type === 'value') {\n                if (tagOperator = tags[tagIndex].operator) {\n                    segments[index - 1] = this.uiSegmentSrv.newOperator(tagOperator);\n                    tags[tagIndex].operator = tagOperator;\n                }\n                tags[tagIndex].value = segment.value;\n            } else if (segment.type === 'condition') {\n                tags.push({condition: segment.value});\n                tagIndex += 1;\n            } else if (segment.type === 'operator') {\n                tags[tagIndex].operator = segment.value;\n            }\n        });\n\n        this.target.tags = tags;\n    }\n}\n\nNetSpyGlassQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}