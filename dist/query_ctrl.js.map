{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["/*\n * Copyright (c) 2016.  Happy Gears, Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class NetSpyGlassDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector, uiSegmentSrv) {\n        super($scope, $injector);\n\n        this.prompts = {\n            'category': 'select category',\n            'variable': 'select variable',\n            'device': 'select device',\n            'component': 'select component'\n        };\n\n        this.scope = $scope;\n        this.injector = $injector;\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.clearSelection = '-- clear selection --';\n        this.blankDropDownElement = '---';\n        this.target.category = this.target.category || this.prompts['category'];\n        this.target.variable = this.target.variable || this.prompts['variable'];\n        this.target.device = this.target.device || this.prompts['device'];\n        this.target.component = this.target.component || this.prompts['component'];\n        this.target.sortByEl = this.target.sortByEl || 'none';\n        this.target.selector = this.target.selector || 'choose selector';\n        this.target.limit = this.target.limit || '';\n        this.target.group = this.target.group || 'select group';\n        this.target.tagFacet = this.target.tagFacet || this.blankDropDownElement;\n        this.target.tagOperation = this.target.tagOperation || '==';\n        this.target.tagWord = this.target.tagWord || this.blankDropDownElement;\n        this.target.tagData = this.target.tagData || [];\n\n        this.target.format = this.target.format || 'time_series';\n        this.target.formatDisplay = this.target.formatDisplay || 'Time Series';\n\n        this.target.columns = this.target.columns || 'time,variable,device,component,metric';\n        this.target.alias = this.target.alias || '';\n    }\n\n    isCategorySelected() {\n        return this.target.category !== this.prompts['category'] && this.target.category !== this.clearSelection;\n    }\n\n    isVariableSelected() {\n        return this.target.variable !== this.prompts['variable'] && this.target.variable !== this.clearSelection;\n    }\n\n    /**\n     * add new tag matching rule that consists of tag facet, operation ('==' or '<>') and tag word.\n     * Unfortunately if input fields for the tag facet and word are blank, the height of the corresponding\n     * visible element is reduced (element <a> is visible and its height is 0 when it has no contents, so\n     * all we see is the margin around it). To work around that I put \"-\" in these fields. It is unobtrusive\n     * enough and looks like some sort of a prompt, but it is a hack nonetheless.\n     * FIXME: find a way to fix height of the visible element without adding any contents.\n     */\n    tagDataAdd() {\n        this.target.tagData[this.target.tagData.length] = {\n            tagFacet : this.blankDropDownElement,\n            tagWord : this.blankDropDownElement,\n            tagOperation : '=='\n        };\n        this.refresh();\n    }\n\n    tagDataRemove(index) {\n        this.target.tagData.splice(index,1);\n        this.refresh();\n    }\n\n    getCategories() {\n        return this.datasource.findCategoriesQuery(this.target)\n            .then(this.transformToSegments(this.target.category, this.prompts['category']));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    transformToSegments(currentValue, prompt) {\n        console.log('transformToSegments called:  currentValue=' + currentValue + ' prompt=' + prompt);\n        return (results) => {\n            var segments = _.map(results, segment => {\n                return this.uiSegmentSrv.newSegment({ value: segment.text, expandable: segment.expandable });\n            });\n            // segments.unshift(this.uiSegmentSrv.newSegment({ fake: true, value: this.clearSelection, html: prompt}));\n\n            // there is no need to add \"clear selection\" item if current value is already equal to prompt\n            if (currentValue !== prompt) {\n                segments.unshift(this.uiSegmentSrv.newSegment({ fake: true, value: this.clearSelection, html: prompt}));\n            }\n            return segments;\n        };\n    }\n\n    testRemove() {\n        this.target.variable = this.prompts['variable'];\n        this.getVariables();\n        this.refresh();\n    }\n\n    getVariables() {\n        return this.datasource.findVariablesQuery(this.target)\n            .then(this.transformToSegments(this.target.variable, this.prompts['variable']));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getDevices() {\n        return this.datasource.findDevices(this.target)\n            .then(this.transformToSegments(this.target.device, this.prompts['device']));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getComponents() {\n        return this.datasource.findComponents(this.target)\n            .then(this.transformToSegments(this.target.component, this.prompts['component']));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsFacet(index) {\n        return this.datasource.findTagFacets(this.target, index)\n            .then(this.transformToSegments(this.target.tagFacet, this.target.tagFacet));  // do not add \"-- clear selection --\" item\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsWord(index) {\n        return this.datasource.findTagWordsQuery(this.target, index)\n            .then(this.transformToSegments(this.target.tagWord, this.target.tagWord));  // do not add \"-- clear selection --\" item\n    }\n\n    toggleEditorMode() {\n        this.target.rawQuery = !this.target.rawQuery;\n    }\n\n    onChangeInternalCategory() {\n        if (this.target.category == this.clearSelection) {\n            this.target.category = this.prompts['category'];\n        }\n        // user has changed category, we should erase variable and other selections because they are\n        // not valid anymore\n        this.target.variable = this.prompts['variable'];\n        this.target.device = this.prompts['device'];\n        this.target.component = this.prompts['component'];\n        this.target.tagData = [];\n        // FIXME: this does not look right, there must be a way to update element in the browser without manipulating it directly in DOM\n        angular.element('#variable-field').children().children('a').html(this.target.variable);\n        // call refresh to force graph reload (which should turn blank since we dont have enough data\n        // to build valid query)\n        this.refresh();\n    }\n\n    onChangeInternalVariable() {\n        console.log('Variable has changed to ' + this.target.variable);\n        this.refresh();\n    }\n\n    onChangeInternalDevice() {\n        if(this.target.device == this.clearSelection) {\n            this.target.device = this.prompts['device'];\n        }\n        this.refresh();\n    }\n    onChangeInternalComponent() {\n        if(this.target.component == this.clearSelection) {\n            this.target.component = this.prompts['component'];\n        }\n        this.refresh();\n    }\n    \n    onChangeInternalTagFacet(index) {\n        // clear tag word when user changes tag facet. The dialog enters state where tag facet is selected\n        // but tag word is not. This state is invalid and should be transient, it does not make sense\n        // to call this.refresh() because query is yet incomplete\n        this.target.tagData[index].tagWord = this.blankDropDownElement;\n        // FIXME: this does not look right, there must be a way to update element in the browser without manipulating it directly in DOM\n        angular.element('#tag-word-'+index).children().children(\"a.tag-word\").html(this.target.tagData[index].tagWord);\n        this.refresh();\n    }\n\n    //noinspection JSUnusedLocalSymbols\n    onChangeInternalTagWord(index) {\n        this.refresh();\n    }\n\n    tagOperation(index, operation) {\n        this.target.tagData[index].tagOperation = operation;\n        this.refresh();\n    }\n\n    setSortByEl(sortOrder) {\n        this.target.sortByEl = sortOrder;\n        this.refresh();\n    }\n\n    setSelector(element) {\n        this.target.selector = element;\n        this.refresh();\n    }\n\n    setAlias() {\n        this.refresh();\n    }\n\n    setFormat(element, elementDisplayStr) {\n        this.target.format = element;\n        this.target.formatDisplay = elementDisplayStr;\n        this.refresh();\n    }\n\n    setColumns() {\n        // console.log(this.target.columns);\n        this.refresh();\n    }\n\n    // setGroup() {\n    //     if (this.target.group == '') {\n    //         if(this.tempNew !== ''){\n    //             this.target.group = this.tempNew;\n    //         }\n    //         else {\n    //             this.target.group = 'select group';\n    //         }\n    //     }\n    //     this.refresh();\n    // }\n\n}\n\nNetSpyGlassDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}